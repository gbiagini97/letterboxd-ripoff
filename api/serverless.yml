service: api
frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, env:AWS_STAGE, 'dev'}
  region: ${opt:region, env:AWS_REGION, 'eu-central-1'}
  stackName: ${self:service}-${self:provider.stage}

  environment:
    STDB_CF_STACK: ${param:STDB_CF_STACK}

custom:
  webpack:
    webpackConfig: webpack.config.js
    packager: "yarn"
    includeModules:
      forceExclude:
        - aws-sdk

functions:
  home:
    handler: src/home.handler
    events:
      - httpApi: "GET /"

  ### USERS
  registerUser:
    handler: src/user.register
    events:
      - httpApi: "POST /register"
    environment:
      SINGLE_TABLE_ID: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableID}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableArn}

  getUser:
    handler: src/user.get
    events:
      - httpApi: "GET /users/{userID}"
    environment:
      SINGLE_TABLE_ID: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableID}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Query
        Resource: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableArn}

  ### FILM
  createFilm:
    handler: src/film.create
    events:
      - httpApi: "POST /film"
    environment:
      SINGLE_TABLE_ID: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableID}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
        Resource: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableArn}
  
  getFilm:
    handler: src/film.get
    events:
      - httpApi: "GET /film/{filmID}"
    environment:
      SINGLE_TABLE_ID: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableID}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Query
        Resource: !Sub ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableArn}/index/GSI1SK

  ### REVIEWS
  createReview:
    handler: src/review.create
    events:
      - httpApi: "POST /users/{userID}/reviews"
    environment:
      SINGLE_TABLE_ID: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableID}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
        Resource: ${cf:${self:provider.environment.STDB_CF_STACK}.SingleTableArn}

resources:
  - Outputs:
      AwsRegion:
        Value: ${opt:region, self:provider.region}
